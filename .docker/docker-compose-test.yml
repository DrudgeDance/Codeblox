# path:  .docker/docker-compose-test.yml

services:
  test:
    image: ${ORGANIZATION}/codeblox-dev
    container_name: codeblox-nextjs-test
    ports:
      - "3000:3000"
    volumes:
      - ../:/usr/src/app:cached  # Mount the application code for running tests
      - ../.configs/scripts/wait-for-it.sh:/usr/src/.configs/scripts/wait-for-it.sh  # Include the wait-for-it script
    environment:
      - NODE_ENV=test
    command: >
      bash -c "
      /usr/src/.configs/scripts/wait-for-it.sh postgres-db-test:5432 --timeout=30 --strict -- &&
      until pg_isready -h postgres-db-test -p 5432 -U ${POSTGRES_USER}; do
        echo 'Waiting for PostgreSQL to be ready...';
        sleep 2;
      done;
      echo 'Starting tests...';
      PGPASSWORD=${POSTGRES_PASSWORD} psql -h postgres-db-test -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c \"\\\\l\" &&
      npm run test &&
      echo 'Tests finished.'"
    depends_on:
      - postgres-db-test
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]  # Optional healthcheck to ensure the web service is up
      interval: 30s
      timeout: 10s
      retries: 3

  postgres-db-test:
    image: ${ORGANIZATION}/codeblox-postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - test-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  test-db-volume: